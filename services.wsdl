<?xml version="1.0" encoding="UTF-8"?>
<definitions targetNamespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"
  xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"
  xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:MIME="http://schemas.xmlsoap.org/wsdl/mime/"
  xmlns:DIME="http://schemas.xmlsoap.org/ws/2002/04/dime/wsdl/"
  xmlns:SOAP="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
  xmlns:WSDL="http://schemas.xmlsoap.org/wsdl/"
  xmlns="http://schemas.xmlsoap.org/wsdl/"
  name="FlowSOG">

  <documentation>
    FlowSOG Shop services
  </documentation>

  <!-- ===== -->
  <!-- Types -->
  <!-- ===== -->

  <types>
    <schema xmlns="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory">
      <!-- <import namespace="http://schemas.xmlsoap.org/soap/encoding/"/> -->

      <complexType name="status">
        <sequence>
          <element name="currentAvailability" minOccurs="1" maxOccurs="1" default="available">
            <simpleType>
              <restriction base="xsd:string">
                <enumeration value="available"/>
                <enumeration value="not available"/>
              </restriction>
            </simpleType>
          </element>
          <element name="availableAgainInDays" type="xsd:integer" minOccurs="0" maxOccurs="1">
            <annotation>
              <documentation>
                If product is not available, this value indicates in how many days the product is expected to be available again.
              </documentation>
            </annotation>
          </element>
          <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/>
        </sequence>
        <anyAttribute/>
      </complexType>

      <complexType name="product">
        <sequence>
          <element name="id" type="xsd:string" minOccurs="1" maxOccurs="1"/>
          <element name="name" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <element name="producer" type="xsd:string" minOccurs="0" maxOccurs="1"/>
          <element name="weight" type="xsd:decimal" minOccurs="0" maxOccurs="1"/>
          <element name="price" type="xsd:decimal" minOccurs="0" maxOccurs="1"/>
          <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/>
        </sequence>
        <anyAttribute/>
      </complexType>

      <complexType name="productList">
        <sequence>
          <element name="product" type="FlowSOG:product" minOccurs="0" maxOccurs="unbounded"/>
          <any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace"/>
        </sequence>
        <anyAttribute/>
      </complexType>

      <element name="checkAvailabilityInput">
        <complexType>
          <sequence>
            <element name="product" type="FlowSOG:product"/>
          </sequence>
        </complexType>
      </element>

      <element name="checkAvailabilityOutput">
        <complexType>
          <sequence>
            <element name="status" type="FlowSOG:status"/>
            <element name="product" type="FlowSOG:product"/>
          </sequence>
        </complexType>
      </element>
      
      <element name="checkAvailabilityAsyncInput">
        <complexType>
          <sequence>
            <element name="callbackUrl" type="xsd:string"/>
            <element name="customerId" type="xsd:string"/>
            <element name="product" type="FlowSOG:product"/>
          </sequence>
        </complexType>
      </element>

      <element name="checkAvailabilityAsyncOutput">
        <complexType>
          <sequence>
            <element name="estimatedDurationInMillis" type="xsd:integer"/>
          </sequence>
        </complexType>
      </element>
      
      <element name="listProductsInput">
        <complexType>
          <sequence>
            <element name="limit" type="xsd:integer"/>
          </sequence>
        </complexType>
      </element>

      <element name="listProductsOutput">
        <complexType>
          <sequence>
            <element name="list" type="FlowSOG:productList"/>
          </sequence>
        </complexType>
      </element>
      
      <!-- <element name="onFinishCheckAvailabilityInput"> -->
        <complexType name="onFinishCheckAvailabilityInput">
          <sequence>
            <element name="customerId" type="xsd:string"/>
            <element name="status" type="FlowSOG:status"/>
            <element name="product" type="FlowSOG:product"/>
          </sequence>
        </complexType>
      <!-- </element> -->
    </schema>
  </types>

  <!-- ======== -->
  <!-- Messages -->
  <!-- ======== -->

  <!-- SOAP faults: http://web-gmazza.rhcloud.com/blog/entry/asynchronous-web-service-calls -->
  <!-- <message name="fault">
    <part name="error" type="xsd:string"/>
  </message> -->

  <message name="checkAvailabilityInput">
    <part name="checkAvailabilityInput" element="FlowSOG:checkAvailabilityInput"/>
  </message>
  
  <message name="checkAvailabilityOutput">
    <part name="checkAvailabilityOutput" element="FlowSOG:checkAvailabilityOutput"/>
  </message>

  <message name="checkAvailabilityAsyncInput">
    <part name="checkAvailabilityAsyncInput" element="FlowSOG:checkAvailabilityAsyncInput"/>
  </message>

  <message name="checkAvailabilityAsyncOutput">
    <part name="checkAvailabilityAsyncOutput" element="FlowSOG:checkAvailabilityAsyncOutput"/>
  </message>

  <message name="listProductsInput">
    <part name="listProductsInput" element="FlowSOG:listProductsInput"/>
  </message>

  <message name="listProductsOutput">
    <part name="listProductsOutput" element="FlowSOG:listProductsOutput"/>
  </message>

  <message name="onFinishCheckAvailabilityInput">
    <part name="onFinishCheckAvailabilityInput" type="FlowSOG:onFinishCheckAvailabilityInput"/>
  </message>

  <!-- ========== -->
  <!-- Port Types -->
  <!-- ========== -->

  <portType name="InventoryPortType">
    <operation name="checkAvailability">
      <input message="tns:checkAvailabilityInput"/>
      <output message="tns:checkAvailabilityOutput"/>
      <!-- <fault message="tns:fault"/> -->
    </operation>
    <operation name="checkAvailabilityAsync">
      <input message="tns:checkAvailabilityAsyncInput"/>
      <output message="tns:checkAvailabilityAsyncOutput"/>
    </operation>
    <operation name="listProducts">
      <input message="tns:listProductsInput"/>
      <output message="tns:listProductsOutput"/>
    </operation>
  </portType>

  <portType name="InventoryCallbackPortType">
    <operation name="onFinishCheckAvailability">
      <input message="tns:onFinishCheckAvailabilityInput"/>
    </operation>
  </portType>

  <!-- ======== -->
  <!-- Bindings -->
  <!-- ======== -->

  <binding name="InventorySoapBinding" type="tns:InventoryPortType">
    <SOAP:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="checkAvailability">
      <SOAP:operation style="rpc" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/checkAvailability"/>
      <input>
        <!-- <SOAP:body use="encoded" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/> -->
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </output>
      <!-- <fault>
        <SOAP:body use="literal"/>
      </fault> -->
    </operation>
    <operation name="checkAvailabilityAsync">
      <SOAP:operation style="rpc" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/checkAvailabilityAsync"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </output>
    </operation>
    <operation name="listProducts">
      <SOAP:operation style="rpc" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/listProducts"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </input>
      <output>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </output>
    </operation>
  </binding>

  <binding name="InventoryCallbackSoapBinding" type="tns:InventoryCallbackPortType">
    <SOAP:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="onFinishCheckAvailability">
      <SOAP:operation style="rpc" soapAction="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory/onFinishCheckAvailability"/>
      <input>
        <SOAP:body use="literal" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG/Inventory"/>
      </input>
    </operation>
  </binding>

  <!-- ======== -->
  <!-- Services -->
  <!-- ======== -->

  <service name="InventoryService">
    <port name="InventoryPort" binding="tns:InventorySoapBinding">
      <SOAP:address location="{{baseAddress}}/InventoryService/InventoryPort"/>
    </port>
  </service>

  <!-- This service endpoint has to be provided by the invoker, e.g., the BPEL workflow invoking the InventoryService -->
  <service name="InventoryCallbackService">
    <port name="InventoryCallbackPort" binding="tns:InventoryCallbackSoapBinding">
      <SOAP:address location=""/>
    </port>
  </service>

</definitions>
